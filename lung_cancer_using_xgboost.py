# -*- coding: utf-8 -*-
"""Lung Cancer using XGBOOST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j3LhWmfZpKsClnU5wJfLx5y2-6UTMwEs

#Lung Cancer using XGBOOST
"""

!cd ..
from google.colab import drive
drive.mount("/content/gdrive")

# rename path
!ln -s /content/gdrive/My\ Drive/ /mydrive

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split

path = '/mydrive/Data_Science_Projects/Lung_Cancer_using_XGBOOST/data/'

df = pd.read_csv(path + "survey_lung_cancer.csv")
print(df.shape)
df.head(10)

"""###Summarize dataset:
  - Gender: M(male), F(female)
  - Age: Age of the patient
  - Smoking: YES=2 , NO=1.
  - Yellow fingers: YES=2 , NO=1.
  - Anxiety: YES=2 , NO=1.
  - Peer_pressure: YES=2 , NO=1.
  - Chronic Disease: YES=2 , NO=1.
  - Fatigue: YES=2 , NO=1.
  - Allergy: YES=2 , NO=1.
  - Wheezing: YES=2 , NO=1.
  - Alcohol: YES=2 , NO=1.
  - Coughing: YES=2 , NO=1.
  - Shortness of Breath: YES=2 , NO=1.
  - Swallowing Difficulty: YES=2 , NO=1.
  - Chest pain: YES=2 , NO=1.
  - Lung Cancer: YES , NO.

##Label Encoding
"""

df.rename(columns={'CHRONIC DISEASE':'CHRONIC_DISEASE','ALCOHOL CONSUMING': 'ALCOHOL_CONSUMING', 'SHORTNESS OF BREATH':'SHORTNESS_OF_BREATH', 'SWALLOWING DIFFICULTY':'SWALLOWING_DIFFICULTY', 'CHEST PAIN':'CHEST_PAIN'}, inplace = True)

df.columns

df.describe()

from sklearn import preprocessing

label_encoder = preprocessing.LabelEncoder()
df['LUNG_CANCER'] = label_encoder.fit_transform(df['LUNG_CANCER'])
df['GENDER'] = label_encoder.fit_transform(df['GENDER'])
df.head(10)

"""M[male] = 1 & F[female] = 0 
Lung_cancer => YES = % NO= 0 
"""

#correlation
corr = df.corr()

#seaborn heatmap method
plt.figure(figsize=[16,6])
sns.heatmap(data=corr, annot=True)

!install pandas profilling
!pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip

# import pandas profilling
from pandas_profiling import ProfileReport

# run profile
profile = ProfileReport(df, title = 'Report - Pandas Profilling', html={'style': {'full_width': True}})
profile

# Remove column Age
df = df.drop(['AGE'], axis = 1)
df.head(10)

"""## Separate Dataset"""

X = df.iloc[:, :-1].values
y = df.iloc[:, -1].values

y

"""##Splitting dataset into train and test"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=20)

"""Training with XGBOOST"""

from xgboost import XGBClassifier
model = XGBClassifier()
model.fit(X_train, y_train)

"""## Metrics"""

from sklearn.metrics import confusion_matrix, accuracy_score
y_pred = model.predict(X_test)
cm = confusion_matrix(y_test, y_pred)
print(cm)
accuracy_score(y_test, y_pred)

"""## K-Fold Cross Validation"""

from sklearn.model_selection import cross_val_score
accuracies = cross_val_score(model, X, y, cv=10)
print("Accuracy {:.2f} %".format(accuracies.mean()*100))

"""##Deploy"""

df.to_csv('//mydrive/Data_Science_Projects/Lung_Cancer_using_XGBOOST/data/data.csv', index=False)
model.save_model("model.json")

import pickle
file_name = "model.pkl"

# save
pickle.dump(model, open(file_name, "wb"))

